- Add an operation for Get Emperor by Name (more user-friendly than get emperor by id)
- Add responses for successful operations in PUT, DELETE, POST - i.e. emperor added successfully
- Change update and post operations to get values from queryParams instead of from the body?
- Publish the app on https
- create a self-signed certificate and a fake custom domain and publish it there
- Parametrize the app.
    - Connection config for database based on env - dev/PROD
    - externalize these values so that we can modify properties by modifying only the external file
    - this external file will be used by Jenkins?
- Add a static html page to work as frontend
- Add postman collection. Sync postman and github so that changes in the collection are automatically updated in github
- Parametrize the postman collection
- Add authentication - Basic first and then ClientId and/or OAuth (Okta integration?)
- Add loggers for a proper logging strategy
- Add bulk insert/update/delete operations
- Create a batch job to populate the database from the csv/json file
- Add two extra batch operations. One to empty/reset the database and another one to populate it with the first 25 emperors. Include the json file with the data inside the app? can we also externalize that and take it from an sftp?
- Add API manager instance ID and play with policies
- Add 5 pages of API documentation based on Catalyst best practices

Define naming convention for:
- Flow names - format and what info should include, i.e. getEmperorById
- URL naming convention - should we include apiversion --> HTTP://<host_name>/api/v1/resource?


NEW API SPEC
- Create Responses for all operations:
    - 200 for all GET and DELETE operations. Send a custom message with successful/unsuccessful operation with DELETE
    - 201 for all POST operations
    - 204 to PATCH operations
- Create Error Responses (client-side 4xx and server-side 5xx)
    - 404 Not Found to all GET operations
    - 406 Unsupported type to GET operations (if only allowed json or XML)
    - 501 not implemented to PATCH
    - 503 Service Unavailable to POST operations
- Add a response body with both 200 and 201 PUT methods
- Create enum type of parameter for the operation get emperor by name, this way we show a dropdown of names instead of a free field
- Create Datatypes fragments files
    - Set request and response body types to datatypes
- Create examples for datatypes fragments
- Define required and optional attributes in datatypes
- Create datatypes for CustomErrorMessages



